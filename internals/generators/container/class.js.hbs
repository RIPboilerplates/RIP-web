import React from 'react'
// import PropTypes from 'prop-types'
{{#if wantHeaders}}
import { Helmet } from 'react-helmet'
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl'
import messages from './messages'
  {{#if wantHeaders}}
import { injectIntl, intlShape } from 'react-intl'
  {{/if}}
{{/if}}
import Styled from './styles'

/**
* {{ properCase name }} Component Description
*/
export class {{ properCase name }} extends {{{ type }}} {
  constructor(props) {
    super(props)

    this.state = {

    }
  }

  render() {
    {{#ifCond wantMessages '&&' wantHeaders}}
    const { intl } = this.props

    {{/ifCond}}
    return (
      <Styled.Container>
      {{#if wantHeaders}}
        <Helmet>
          {{#ifCond wantMessages '&&' wantHeaders}}
            <title>{intl.formatMessage(messages.pageTitle)}</title>
            <meta name={'description'} content={intl.formatMessage(messages.pageDescription)} />
          {{else}}
            <title>{{properCase name}}</title>
            <meta name={'description'} content='Description of {{properCase name}}' />
          {{/ifCond}}

        </Helmet>
      {{/if}}
      {{#if wantMessages}}
        <FormattedMessage {...messages.header} />
      {{else}}
        This is the {{ properCase name}} {{ lowerCase directory }}!
      {{/if}}
      </Styled.Container>
    )
  }
}

{{ properCase name }}.propTypes = {
{{#ifCond wantMessages '&&' wantHeaders}}
  intl: intlShape.isRequired,
{{else}}
  // prop types
{{/ifCond}}
}

{{#ifCond wantMessages '&&' wantHeaders}}
export default injectIntl({{ properCase name }})
{{else}}
export default {{ properCase name }}
{{/ifCond}}
